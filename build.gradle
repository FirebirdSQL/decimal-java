import java.time.Year

/*
  Gradle build script for decimal-java.

  Uploading archives:

  publish -PcredentialsPassphrase=<credentials password>
 */

plugins {
    id 'java-library'
    id 'nu.studer.credentials' version '3.0'
    id 'maven-publish'
    id 'signing'
}

group 'org.firebirdsql'
version '2.0.1-SNAPSHOT'

ext.'signing.password' = credentials.forKey('signing.password')
ext.ossrhPassword = credentials.forKey('ossrhPassword')

ext.isReleaseVersion = provider {
    !version.endsWith("SNAPSHOT")
}

dependencies {
    testImplementation platform(testLibs.junit.bom)
}

java {
    withJavadocJar()
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

testing {
    suites {
        configureEach {
            useJUnitJupiter()
            dependencies {
                implementation.bundle(testLibs.bundles.junit)
            }
            targets {
                configureEach {
                    testTask.configure {
                        testLogging {
                            events "passed", "skipped", "failed"
                        }
                        systemProperty 'file.encoding', 'UTF-8'
                    }
                }
            }
        }
    }
}

sourceSets {
    tools {
        java {

        }
    }
    test {
        java {
            compileClasspath += tools.output
            runtimeClasspath += tools.output
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Jar).configureEach {
    // General manifest info
    manifest {
        def buildYear = Year.now().toString()
        attributes(
                'Created-By': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Bundle-License': 'MIT',
                'SPDX-License-Identifier': 'MIT',
                'SPDX-FileCopyrightText': "2017-$buildYear Firebird development team and individual contributors"
        )
    }
}

tasks.named("jar", Jar) {
    // Info specific to main jar
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
}

tasks.named('javadoc', Javadoc).configure {
    options.author()
    options.windowTitle = "decimal-java API"
    options.docTitle = 'decimal-java'
    options.bottom = "Copyright &copy; 2017-${new Date().format("yyyy")} Firebird development team and individual contributors. All rights reserved."
    options.addBooleanOption('html5', true)
    options.addBooleanOption('Xdoclint:none', true)
}

publishing {
    publications {
        // Main maven artifact
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'decimal-java'
                packaging = 'jar'
                description = 'A library to convert java.math.BigDecimal to and from ' +
                        'IEEE-754r (IEEE-754-2008) decimal byte representations.'
                url = 'https://github.com/FirebirdSQL/decimal-java'
                inceptionYear = '2017'

                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'mrotteveel'
                        name = 'Mark Rotteveel'
                        email = 'mark@lawinegevaar.nl'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/FirebirdSQL/decimal-java.git'
                    developerConnection = 'scm:git:git@github.com:FirebirdSQL/decimal-java.git'
                    url = 'https://github.com/FirebirdSQL/decimal-java'
                }

                mailingLists {
                    mailingList {
                        name = 'firebird-java'
                        subscribe = 'firebird-java+subscribe@googlegroups.com'
                        unsubscribe = 'firebird-java+unsubscribe@googlegroups.com'
                        post = 'firebird-java@googlegroups.com'
                        archive = 'https://groups.google.com/g/firebird-java'
                        otherArchives = ['http://fb-list-archive.s3-website-eu-west-1.amazonaws.com/firebird-java/index.html']
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url = project.isReleaseVersion.get() ? project.releaseRepository : project.snapshotRepository
            credentials {
                username = findProperty('ossrhUsername') ?: null
                password = findProperty('ossrhPassword') ?: null
            }
        }
    }
}

tasks.withType(PublishToMavenRepository).each {
    it.doFirst {
        if (findProperty('ossrhUsername') == null || findProperty('ossrhPassword') == null) {
            throw new RuntimeException('No credentials for publishing, make sure to specify the properties ' +
                    'credentialsPassphrase, or ossrhUsername and ossrhPassword. See devdoc/publish.md for details.')
        }
    }
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask(':publish') }
    sign publishing.publications.mavenJava
}